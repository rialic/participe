networks:
  app:
  nginx:
  db:

services:
  nginx:
    build:
      context: ./.docker/nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: nginx
    volumes:
      - ./:/var/www
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    networks:
      - nginx

  app:
    build:
      args:
        UID: 1000
        GROUP: 1000
      context: ./.docker/php-fpm
      dockerfile: Dockerfile
    image: app
    container_name: app
    working_dir: /var/www
    volumes:
      - ./:/var/www
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: unless-stopped
    networks:
      - app
      - nginx
      - db

  db:
    image: mysql/mysql-server:8.0.23
    container_name: db
    volumes:
      - ./.docker/mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    command: --federated
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      TZ: "America/Campo_Grande"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
    networks:
      - db

  scheduler:
    image: app
    container_name: scheduler
    working_dir: /var/www
    user: root
    volumes:
      - ./:/var/www
      - ./storage/logs/supervisor:/var/log
    entrypoint: ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
    networks:
      - app


  #CONTAINER SERVICES

  node:
    build:
      context: ./.docker/node
      dockerfile: Dockerfile
    image: node
    container_name: node
    working_dir: /var/www
    volumes:
      - ./:/var/www

  composer:
    image: app
    container_name: composer
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["composer"]
    networks:
      - app

  artisan:
    image: app
    container_name: artisan
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["php", "artisan"]
    networks:
      - app
      - db

  # pest:
  #   image: app
  #   container_name: pest
  #   working_dir: /var/www
  #   volumes:
  #     - ./:/var/www
  #   entrypoint: ["./vendor/bin/pest"]
  #   networks:
  #     - app
  #     - db
